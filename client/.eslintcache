[{"C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\index.js":"1","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\App.js":"2","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\reportWebVitals.js":"3","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\allRes.jsx":"4","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\newRes.jsx":"5","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\updateRes.jsx":"6","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\newProd.jsx":"7","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\allProds.jsx":"8","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\prodDetails.jsx":"9","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\editProd.jsx":"10","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\resReview.jsx":"11","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\resStars.jsx":"12","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\allProjs.jsx":"13","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\newProj.jsx":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":445,"mtime":1607854758483,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"18","hashOfConfig":"16"},{"size":3442,"mtime":1607780467444,"results":"19","hashOfConfig":"20"},{"size":3230,"mtime":1607685877063,"results":"21","hashOfConfig":"20"},{"size":4219,"mtime":1607687031745,"results":"22","hashOfConfig":"20"},{"size":4433,"mtime":1607709242791,"results":"23","hashOfConfig":"20"},{"size":1498,"mtime":1607697816838,"results":"24","hashOfConfig":"20"},{"size":2060,"mtime":1607709977068,"results":"25","hashOfConfig":"20"},{"size":3152,"mtime":1607709917868,"results":"26","hashOfConfig":"20"},{"size":5151,"mtime":1607789212064,"results":"27","hashOfConfig":"20"},{"size":282,"mtime":1607765064153,"results":"28","hashOfConfig":"20"},{"size":4273,"mtime":1607859333902,"results":"29","hashOfConfig":"16"},{"size":2340,"mtime":1607855934666,"results":"30","hashOfConfig":"16"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vwcue2",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"1aebs7h",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"40"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"40"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\index.js",[],"C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\App.js",[],"C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\reportWebVitals.js",[],"C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\allRes.jsx",["63"],"import React, {useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Link} from '@reach/router';\r\n\r\n\r\nconst DisplayRes = props => {\r\n\r\n    const [restaurants, setRestaurants]= useState([]);\r\n    const [q, setQ]= useState(\"\");\r\n    function  bubleSort(restaurants)  {\r\n        const arr=[...restaurants];\r\n        for(let i=0; i<arr.length;i++){\r\n            for(let j=0; j<arr.length-1;j++ ){\r\n                if(arr[j].ratingAverage < arr[j+1].ratingAverage ){\r\n                    [arr[j],arr[j+1]] = [arr[j+1],arr[j]];\r\n                }\r\n            }\r\n        }\r\n        return arr;\r\n    }\r\n    const addAverageRating = (restaurants) =>{\r\n        const arr=[];\r\n        for(let res of restaurants){\r\n            if(res.reviews.length < 1){\r\n                arr.push({...res, ratingAverage: 0} );\r\n                continue;\r\n            }\r\n            let total=0;\r\n            for(let rev of res.reviews ){\r\n                total += rev.rating;\r\n            }\r\n            let av= total/res.reviews.length;\r\n            arr.push({...res, ratingAverage: av.toFixed(1)} );\r\n        }\r\n        return arr;\r\n    }\r\n    function fetch() {\r\n        axios.get(\"http://localhost:8000/restaurants\")\r\n        .then(res => {\r\n            console.log(res.data.restaurants);\r\n            setRestaurants(\r\n                bubleSort(\r\n                    addAverageRating(res.data.restaurants)\r\n                )\r\n                );\r\n        })\r\n        .catch(err => console.error(err))\r\n        }\r\n    useEffect(()=> {\r\n        fetch();\r\n    },[]);\r\n    const deleteRes = (_id) => {\r\n        axios.delete(`http://localhost:8000/restaurants/delete/${_id}`)\r\n        .then(res => {\r\n            console.log(res.data.students);\r\n            fetch();\r\n        })\r\n        .catch(err => console.error(err))\r\n    }\r\n    \r\n    return (\r\n    <div className=\"container\" >\r\n        <input type=\"search\" placeholder=\"search\" className=\" search col-sm-6 mt-2 mb-2 my-2\" onChange={e =>setQ(e.target.value)} />\r\n        {restaurants.filter(r => r.name.toLowerCase().includes(q.toLowerCase())).length < 1 ? <p>No results</p>:\"\"}\r\n            {\r\n                restaurants.filter(r => r.name.toLowerCase().includes(q.toLowerCase())).map((rest ) => \r\n                <div className=\"row\">\r\n                <div className=\"col-sm-12\">\r\n                    <div className=\"card\">\r\n                        <div className=\"card-header bg-dark text-light\">{rest.name} </div>\r\n                        <div className=\"card-body\">\r\n                        <p>Cuisine: {rest.cuisine}  </p>\r\n                        <p>Year Established: {rest.yearOpened}  </p>\r\n                        <p>Description: {rest.description}  </p>\r\n                        <p>Average Rating: {rest.ratingAverage}  </p>\r\n                        <div className=\"d-flex justify-content-between \">\r\n                            <Link to={`/view/${rest._id}`} className=\"btn btn-outline-info\" >View</Link>\r\n                            <Link to={`/edit/${rest._id}`} className=\"btn btn-outline-success\" >Edit</Link> \r\n                            <botton className=\"btn btn-outline-danger\" onClick={e => deleteRes(rest._id)}>Delete</botton>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>   \r\n                </div>            \r\n                )\r\n            }\r\n    </div>\r\n    );\r\n\r\n}\r\nexport default DisplayRes;\r\n\r\n\r\n",["64","65"],"C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\newRes.jsx",[],"C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\updateRes.jsx",["66"],"import React, {useState,useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {navigate} from '@reach/router';\r\n\r\n\r\n\r\nconst UpdateRes = props => {\r\n    const [name,setName] = useState(\"\");\r\n    const [cuisine,setCuisine] = useState(\"\");\r\n    const [yearOpened,setYearOpened] = useState(2020);\r\n    const [description,setDescription] = useState(\"\");\r\n    const [errors,setErrors]= useState({});\r\n    // function fetch() {\r\n    //     axios.get(`http://localhost:8000/restaurants/${props._id}`)\r\n    //     .then(res => {\r\n    //         // console.log(res.data.restaurants);\r\n    //         setName(res.data.restaurant.name);\r\n    //         setCuisine(res.data.restaurant.cuisine);\r\n    //         setYearOpened(res.data.restaurant.yearOpened);\r\n    //         setDescription(res.data.restaurant.description);\r\n    //     })\r\n    //     .catch(err => console.error(err))\r\n    //     }\r\n    useEffect(()=> {\r\n        axios.get(`http://localhost:8000/restaurants/${props._id}`)\r\n        .then(res => {\r\n            console.log(\"theeeee id\",props._id);\r\n            setName(res.data.restaurant.name);\r\n            setCuisine(res.data.restaurant.cuisine);\r\n            setYearOpened(res.data.restaurant.yearOpened);\r\n            setDescription(res.data.restaurant.description);\r\n        })\r\n        .catch(err => console.error(err))\r\n    },[]);\r\n    const updateRestaurant = (e) => {\r\n        e.preventDefault();\r\n        const updatedRestaurant = {name,cuisine,yearOpened,description};\r\n        axios.put(`http://localhost:8000/restaurants/update/${props._id}` ,updatedRestaurant)\r\n        .then(res => {\r\n            console.log(res.data.restaurants);\r\n            if(res.data.errors){\r\n                setErrors(res.data.errors);\r\n            }\r\n            else {\r\n                navigate(\"/\");\r\n            }\r\n        })\r\n        .catch(err => console.error(err))\r\n        \r\n        }\r\n    return (\r\n    <div className=\"container\" >\r\n        <div className=\"row my-5\">\r\n            <div className=\"col-sm-8 offset-sm-2 \">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header bg-dark text-light\">Update A  Restaurant </div>\r\n                    <div className=\"card body\">\r\n                        <form onSubmit={updateRestaurant}>\r\n                            <div className=\"form-group\">\r\n                                <label>Name: </label>\r\n                                <input type=\"text\"  className=\"form-control\" onChange={e => setName(e.target.value)} value={name} />\r\n                                <p className=\"text-danger\">{ errors.name?errors.name.message:\"\"}</p>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Cuisine: </label>\r\n                                <input type=\"text\"  className=\"form-control\" onChange={e => setCuisine(e.target.value)} value={cuisine}/>\r\n                                <p className=\"text-danger\">{ errors.cuisine?errors.cuisine.message:\"\"}</p>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Year Established: </label>\r\n                                <input type=\"Number\"  className=\"form-control \" max=\"2020\" onChange={e => setYearOpened(e.target.value)} value={yearOpened}/>\r\n                                <p className=\"text-danger\">{ errors.yearOpened?errors.yearOpened.message:\"\"}</p>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Description: </label>\r\n                                <input type=\"text\"  className=\"form-control\" onChange={e => setDescription(e.target.value)} value={description}/>\r\n                                <p className=\"text-danger\">{ errors.description?errors.description.message:\"\"}</p>\r\n                            </div>\r\n                            <input type=\"submit\" value=\"Update A New Restaurant \" className=\"btn btn-primary\"/>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>              \r\n    </div>\r\n    );\r\n\r\n}\r\nexport default UpdateRes;\r\n\r\n\r\n","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\newProd.jsx",[],"C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\allProds.jsx",[],"C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\prodDetails.jsx",["67"],"C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\editProd.jsx",["68"],"C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\resReview.jsx",["69","70"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n// import {navigate} from '@reach/router';\r\nimport Stars from '../Components/resStars';\r\nimport moment from 'moment';\r\n\r\n\r\n\r\nconst ReviewRes = props => {\r\n    const [restaurant,setRestaurant] = useState({reviews: []});\r\n    const [name,setName] = useState(\"\");\r\n    const [rating,setRating] = useState(3);\r\n    const [content,setContent] = useState(\"\");\r\n    const [errors,setErrors]= useState({});\r\n    \r\n    function fetch() {\r\n        axios.get(`http://localhost:8000/restaurants/${props._id}`)\r\n        .then(res => {\r\n            console.log(res.data.restaurant);\r\n            setRestaurant(res.data.restaurant);\r\n        })\r\n        .catch(err => console.error(err))\r\n        }\r\n    useEffect(()=> {\r\n        fetch();\r\n    },[]);\r\n    Array.prototype.reverseRev= function() {\r\n        const copy= [...this];\r\n        copy.reverse();\r\n        return copy;\r\n    }\r\n    const ratingAvrage = (revs) =>{\r\n        let total=0\r\n        for(let rev of revs){\r\n            total += rev.rating\r\n        }\r\n        return (total / revs.length ).toFixed(1);\r\n    }\r\n    const reviewRes = (e) => {\r\n        e.preventDefault();\r\n        const newReview = {name,rating,content};\r\n        axios.post(`http://localhost:8000/restaurants/${props._id}/review` ,newReview)\r\n        .then(res => {\r\n            console.log(res.data.restaurant);\r\n            if(res.data.errors){\r\n                setErrors(res.data.errors);\r\n            }\r\n            else {\r\n                fetch();\r\n                setErrors({});\r\n            }\r\n        })\r\n        .catch(err => console.error(err))\r\n        \r\n        }\r\n    return (\r\n    <div className=\"container\" >\r\n        <div className=\"row my-5\">\r\n            <div className=\"col-sm-5  \">\r\n                <div className=\"card\">\r\n                    <div className=\"card-header bg-dark text-light\">{restaurant.name }</div>\r\n                    <div className=\"card body\">\r\n                    <p>Cuisine: {restaurant.cuisine}  </p>\r\n                    <p>Year Established: {restaurant.yearOpened}  </p>\r\n                    <p>Description: {restaurant.description}  </p>\r\n                    <p>Average rating: {ratingAvrage(restaurant.reviews)} </p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"col-sm-5  \">\r\n            <div className=\"card\">\r\n                    <div className=\"card-header bg-dark text-light\">Leave A Review </div>\r\n                    <div className=\"card body\">\r\n                        <form onSubmit={reviewRes}>\r\n                            <div className=\"form-group\">\r\n                                <label>Your Name: </label>\r\n                                <input type=\"text\"  className=\"form-control\" onChange={e => setName(e.target.value)} value={name} />\r\n                                <p className=\"text-danger\">{ errors.name?errors.name.message:\"\"}</p>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Rating: </label>\r\n                                <select  onChange={e => setRating(e.target.value)} value={rating} >\r\n                                    <option value=\"1\">★☆☆☆☆</option>\r\n                                    <option value=\"2\">★★☆☆☆</option>\r\n                                    <option value=\"3\">★★★☆☆</option>\r\n                                    <option value=\"4\">★★★★☆</option>\r\n                                    <option value=\"5\">★★★★★</option>\r\n                                </select>\r\n                                <p className=\"text-danger\">{ errors.rating?errors.rating.message:\"\"}</p>\r\n                            </div>\r\n                            <div className=\"form-group\">\r\n                                <label>Content: </label>\r\n                                <input type=\"text\"  className=\"form-control\" onChange={e => setContent(e.target.value)} value={content}/>\r\n                                <p className=\"text-danger\">{ errors.content?errors.content.message:\"\"}</p>\r\n                            </div>\r\n                            <input type=\"submit\" value=\"Leave A Review\" className=\"btn btn-primary\"/>\r\n                        </form>\r\n                    </div>\r\n            </div>\r\n        </div> \r\n            <div className=\"col-10  \">\r\n            <div className=\"card\">\r\n                    <div className=\"card-header bg-dark text-light\">{restaurant.name } Reviews</div>\r\n                        {\r\n                            restaurant.reviews.reverseRev().map((rev) =>\r\n                            <div className=\"card body\"> \r\n                            <Stars rating={rev.rating}/>\r\n                            <p>{rev.name} says :{rev.content} </p>\r\n                            <p>{moment(rev.createdAt).fromNow()}</p>\r\n                            </div>\r\n                            )\r\n                        }\r\n                </div>\r\n            </div>\r\n        </div>             \r\n    </div>\r\n    );\r\n\r\n}\r\nexport default ReviewRes;\r\n\r\n\r\n","C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\resStars.jsx",[],"C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\allProjs.jsx",[],"C:\\Users\\aCer\\Documents\\CodingDojo\\MERN\\MongoDB\\user-api\\client\\src\\Components\\newProj.jsx",["71"],{"ruleId":"72","severity":1,"message":"73","line":51,"column":7,"nodeType":"74","endLine":51,"endColumn":9,"suggestions":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","replacedBy":"79"},{"ruleId":"72","severity":1,"message":"80","line":34,"column":7,"nodeType":"74","endLine":34,"endColumn":9,"suggestions":"81"},{"ruleId":"72","severity":1,"message":"73","line":24,"column":7,"nodeType":"74","endLine":24,"endColumn":9,"suggestions":"82"},{"ruleId":"72","severity":1,"message":"73","line":25,"column":7,"nodeType":"74","endLine":25,"endColumn":9,"suggestions":"83"},{"ruleId":"72","severity":1,"message":"73","line":26,"column":7,"nodeType":"74","endLine":26,"endColumn":9,"suggestions":"84"},{"ruleId":"85","severity":1,"message":"86","line":27,"column":5,"nodeType":"87","messageId":"88","endLine":31,"endColumn":6},{"ruleId":"89","severity":1,"message":"90","line":10,"column":19,"nodeType":"91","messageId":"92","endLine":10,"endColumn":28},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetch'. Either include it or remove the dependency array.","ArrayExpression",["93"],"no-native-reassign",["94"],"no-negated-in-lhs",["95"],"React Hook useEffect has a missing dependency: 'props._id'. Either include it or remove the dependency array.",["96"],["97"],["98"],["99"],"no-extend-native","Array prototype is read only, properties should not be added.","AssignmentExpression","unexpected","no-unused-vars","'setStatus' is assigned a value but never used.","Identifier","unusedVar",{"desc":"100","fix":"101"},"no-global-assign","no-unsafe-negation",{"desc":"102","fix":"103"},{"desc":"100","fix":"104"},{"desc":"100","fix":"105"},{"desc":"100","fix":"106"},"Update the dependencies array to be: [fetch]",{"range":"107","text":"108"},"Update the dependencies array to be: [props._id]",{"range":"109","text":"110"},{"range":"111","text":"108"},{"range":"112","text":"108"},{"range":"113","text":"108"},[1553,1555],"[fetch]",[1343,1345],"[props._id]",[761,763],[726,728],[810,812]]